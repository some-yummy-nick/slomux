{"version":3,"sources":["index.js"],"names":["int","connect","mapStateToProps","mapDispatchToProps","Component","WrappedComponent","_React$Component","_getPrototypeOf2","_this","Object","D_Github_slomux_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_len","arguments","length","args","Array","_key","D_Github_slomux_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_Github_slomux_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","concat","handleChange","forceUpdate","D_Github_slomux_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_Github_slomux_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","context","store","subscribe","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","assign","props","getState","dispatch","React","contextTypes","PropTypes","object","Provider","Children","only","children","childContextTypes","IntervalComponent","_this2","currentInterval","onClick","changeInterval","Interval","state","type","payload","TimerComponent","_this3","currentTime","handleStart","startButton","current","classList","add","setState","setInterval","bind","D_Github_slomux_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleStop","remove","clearInterval","createRef","className","ref","Timer","ReactDOM","render","reducer","initialState","currentState","listeners","action","forEach","listener","push","createStore","D_Github_slomux_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","document","getElementById"],"mappings":"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","file":"static/js/main.f13c111d.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nlet int;\nconst createStore = (reducer, initialState) => {\n    let currentState = initialState;\n    const listeners = [];\n\n    const getState = () => currentState;\n    const dispatch = action => {\n        currentState = reducer(currentState, action);\n        listeners.forEach(listener => listener());\n        return action;\n    };\n\n    const subscribe = listener => listeners.push(listener);\n\n    return { getState, dispatch, subscribe };\n};\n\nconst connect = (mapStateToProps, mapDispatchToProps) => Component => {\n    class WrappedComponent extends React.Component {\n        componentDidMount() {\n            this.context.store.subscribe(this.handleChange);\n        }\n\n        handleChange = () => {\n            this.forceUpdate();\n        };\n\n        render() {\n            return (\n                <Component\n                    {...this.props}\n                    {...mapStateToProps(this.context.store.getState(), this.props)}\n                    {...mapDispatchToProps(this.context.store.dispatch, this.props)}\n                />\n            );\n        }\n    }\n\n    WrappedComponent.contextTypes = {\n        store: PropTypes.object\n    };\n\n    return WrappedComponent;\n};\n\nclass Provider extends React.Component {\n    getChildContext() {\n        return {\n            store: this.props.store\n        };\n    }\n\n    render() {\n        return React.Children.only(this.props.children);\n    }\n}\n\nProvider.childContextTypes = {\n    store: PropTypes.object\n};\n\n// APP\n\n// actions\nconst CHANGE_INTERVAL = \"CHANGE_INTERVAL\";\n\n// action creators\nconst changeInterval = value => ({\n    type: CHANGE_INTERVAL,\n    payload: value\n});\n\n// reducers\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case CHANGE_INTERVAL:\n            return {\n                ...state,\n                currentInterval: state.currentInterval + action.payload\n            };\n        default:\n            return {};\n    }\n};\n\n// components\n\nclass IntervalComponent extends React.Component {\n    render() {\n        return (\n            <div>\n        <span>\n          Интервал обновления секундомера: {this.props.currentInterval} сек.\n        </span>\n                <span>\n          <button onClick={() => this.props.changeInterval(-1)}>-</button>\n          <button onClick={() => this.props.changeInterval(1)}>+</button>\n        </span>\n            </div>\n        );\n    }\n}\n\nconst Interval = connect(\n    state => ({\n        currentInterval: state.currentInterval\n    }),\n    dispatch => ({\n        changeInterval: value => dispatch(changeInterval(value))\n    })\n)(IntervalComponent);\n\nclass TimerComponent extends React.Component {\n    constructor() {\n        super();\n        this.startButton = React.createRef();\n    }\n    state = {\n        currentTime: 0\n    };\n\n    handleStart = () => {\n        const { currentInterval } = this.props;\n        const startButton = this.startButton.current;\n        startButton.classList.add(\"disable\");\n        this.setState({\n            currentTime: 0\n        });\n        const changeCurrentTime = () => {\n            this.setState(state => ({\n                currentTime: state.currentTime + currentInterval\n            }));\n        };\n\n        int = setInterval(changeCurrentTime.bind(this), currentInterval * 1000);\n    };\n\n    handleStop = () => {\n        const startButton = this.startButton.current;\n        startButton.classList.remove(\"disable\");\n        clearInterval(int);\n        this.setState({ currentTime: 0 });\n    };\n\n    render() {\n        return (\n            <div>\n                <Interval />\n                <div>Секундомер: {this.state.currentTime} сек.</div>\n                <div>\n                    <button\n                        className=\"button-start\"\n                        onClick={this.handleStart}\n                        ref={this.startButton}\n                    >\n                        Старт\n                    </button>\n                    <button onClick={this.handleStop}>Стоп</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Timer = connect(\n    state => ({\n        currentInterval: state.currentInterval\n    }),\n    () => {}\n)(TimerComponent);\n\nconst initialState = {\n    currentInterval: 1\n};\n\n// init\nReactDOM.render(\n    <Provider store={createStore(reducer, initialState)}>\n        <Timer />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}