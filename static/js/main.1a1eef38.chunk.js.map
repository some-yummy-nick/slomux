{"version":3,"sources":["index.js"],"names":["int","connect","mapStateToProps","mapDispatchToProps","Component","WrappedComponent","_React$PureComponent","_getPrototypeOf2","_this","Object","D_Github_slomux_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_len","arguments","length","args","Array","_key","D_Github_slomux_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_Github_slomux_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","apply","concat","handleChange","forceUpdate","D_Github_slomux_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_Github_slomux_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","key","value","context","store","subscribe","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","assign","props","getState","dispatch","React","PureComponent","contextTypes","PropTypes","object","Provider","Children","only","children","childContextTypes","IntervalComponent","_this2","currentInterval","onClick","changeInterval","Interval","state","type","payload","TimerComponent","_this3","currentTime","handleStart","startButton","current","classList","add","setState","setInterval","handleStop","remove","clearInterval","createRef","className","ref","Timer","ReactDOM","render","reducer","initialState","currentState","listeners","action","forEach","listener","push","createStore","D_Github_slomux_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","document","getElementById"],"mappings":"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","file":"static/js/main.1a1eef38.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nlet int;\nconst createStore = (reducer, initialState) => {\n    let currentState = initialState;\n    const listeners = [];\n\n    const getState = () => currentState;\n    const dispatch = action => {\n        currentState = reducer(currentState, action);\n        listeners.forEach(listener => listener());\n        return action;\n    };\n\n    const subscribe = listener => listeners.push(listener);\n\n    return {getState, dispatch, subscribe};\n};\n\nconst connect = (mapStateToProps, mapDispatchToProps) => Component => {\n    class WrappedComponent extends React.PureComponent {\n        componentDidMount() {\n            this.context.store.subscribe(this.handleChange);\n        }\n\n        handleChange = () => {\n            this.forceUpdate();\n        };\n\n        render() {\n            return (\n                <Component\n                    {...this.props}\n                    {...mapStateToProps(this.context.store.getState(), this.props)}\n                    {...mapDispatchToProps(this.context.store.dispatch, this.props)}\n                />\n            );\n        }\n    }\n\n    WrappedComponent.contextTypes = {\n        store: PropTypes.object\n    };\n\n    return WrappedComponent;\n};\n\nclass Provider extends React.PureComponent {\n    getChildContext() {\n        return {\n            store: this.props.store\n        };\n    }\n\n    render() {\n        return React.Children.only(this.props.children);\n    }\n}\n\nProvider.childContextTypes = {\n    store: PropTypes.object\n};\n\n// APP\n\n// actions\nconst CHANGE_INTERVAL = \"CHANGE_INTERVAL\";\n\n// action creators\nconst changeInterval = value => ({\n    type: CHANGE_INTERVAL,\n    payload: value\n});\n\n// reducers\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case CHANGE_INTERVAL:\n            if (state.currentInterval <= 0) {\n                return {\n                    ...state,\n                    currentInterval: 1\n                }\n            } else {\n                return {\n                    ...state,\n                    currentInterval: state.currentInterval + action.payload\n                };\n            }\n\n\n        default:\n            return state;\n    }\n};\n\n// components\n\nclass IntervalComponent extends React.PureComponent {\n    render() {\n        return (\n            <div>\n        <span>\n          Интервал обновления секундомера: {this.props.currentInterval} сек.\n        </span>\n                <span>\n          <button onClick={() => this.props.changeInterval(-1)}>-</button>\n          <button onClick={() => this.props.changeInterval(1)}>+</button>\n        </span>\n            </div>\n        );\n    }\n}\n\nconst Interval = connect(\n    state => ({\n        currentInterval: state.currentInterval\n    }),\n    dispatch => ({\n        changeInterval: value => dispatch(changeInterval(value))\n    })\n)(IntervalComponent);\n\nclass TimerComponent extends React.Component {\n    constructor() {\n        super();\n        this.startButton = React.createRef();\n    }\n\n    state = {\n        currentTime: 0\n    };\n\n    handleStart = () => {\n        const {currentInterval} = this.props;\n        const startButton = this.startButton.current;\n        startButton.classList.add(\"disable\");\n        this.setState({\n            currentTime: 0\n        });\n        const changeCurrentTime = () => {\n            this.setState(state => ({\n                currentTime: state.currentTime + currentInterval\n            }));\n        };\n\n        int = setInterval(changeCurrentTime, currentInterval * 1000);\n    };\n\n    handleStop = () => {\n        const startButton = this.startButton.current;\n        startButton.classList.remove(\"disable\");\n        clearInterval(int);\n        this.setState({currentTime: 0});\n    };\n\n    render() {\n        return (\n            <div>\n                <Interval/>\n                <div>Секундомер: {this.state.currentTime} сек.</div>\n                <div>\n                    <button\n                        className=\"button-start\"\n                        onClick={this.handleStart}\n                        ref={this.startButton}\n                    >\n                        Старт\n                    </button>\n                    <button onClick={this.handleStop}>Стоп</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Timer = connect(\n    state => ({\n        currentInterval: state.currentInterval\n    }),\n    () => {\n    }\n)(TimerComponent);\n\nconst initialState = {\n    currentInterval: 1\n};\n\n// init\nReactDOM.render(\n    <Provider store={createStore(reducer, initialState)}>\n        <Timer/>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}